import { Block } from "prismarine-block";
import { Vec3 } from "vec3";

declare function _exports(Block: any, mcData: any): {
    new (): {
        sectionMask: number;
        skyLightSent: boolean;
        sections: any[];
        biomes: any[];
        toJson(): string;
        initialize(func: any): void;
        getBlock(pos: Vec3): any;
        setBlock(pos: Vec3, block: Block): void;
        getBlockType(pos: Vec3): any;
        getBlockData(pos: Vec3): any;
        getBlockStateId(pos: Vec3): any;
        getBlockLight(pos: Vec3): any;
        getSkyLight(pos: Vec3): any;
        getBiome(pos: Vec3): any;
        getBiomeColor(pos: Vec3): {
            r: number;
            g: number;
            b: number;
        };
        setBlockType(pos: Vec3, id: any): void;
        setBlockData(pos: Vec3, data: any): void;
        setBlockStateId(pos: Vec3, stateId: any): void;
        setBlockLight(pos: Vec3, light: any): any;
        setSkyLight(pos: Vec3, light: any): any;
        setBiome(pos: Vec3, biome: any): void;
        setBiomeColor(pos: Vec3, r: number, g: number, b: number): void;
        getMask(): number;
        dumpBiomes(): void;
        dumpLight(): void;
        loadLight(): void;
        loadBiomes(): void;
        dump(): Buffer;
        load(data: any, bitMap?: number, skyLightSent?: boolean, fullChunk?: boolean): void;
    };
    fromJson(j: any): {
        sectionMask: number;
        skyLightSent: boolean;
        sections: any[];
        biomes: any[];
        toJson(): string;
        initialize(func: any): void;
        getBlock(pos: Vec3): any;
        setBlock(pos: Vec3, block: any): void;
        getBlockType(pos: Vec3): any;
        getBlockData(pos: Vec3): any;
        getBlockStateId(pos: Vec3): any;
        getBlockLight(pos: Vec3): any;
        getSkyLight(pos: Vec3): any;
        getBiome(pos: Vec3): any;
        getBiomeColor(pos: Vec3): {
            r: number;
            g: number;
            b: number;
        };
        setBlockType(pos: Vec3, id: any): void;
        setBlockData(pos: Vec3, data: any): void;
        setBlockStateId(pos: Vec3, stateId: any): void;
        setBlockLight(pos: Vec3, light: any): any;
        setSkyLight(pos: Vec3, light: any): any;
        setBiome(pos: Vec3, biome: any): void;
        setBiomeColor(pos: Vec3, r: number, g: number, b: number): void;
        getMask(): number;
        dumpBiomes(): void;
        dumpLight(): void;
        loadLight(): void;
        loadBiomes(): void;
        dump(): Buffer;
        load(data: any, bitMap?: number, skyLightSent?: boolean, fullChunk?: boolean): void;
    };
};
export = _exports;
